from django.contrib.auth import authenticate, login, logout
from django.shortcuts import render, redirect
from django.core.paginator import Paginator
from django.views.generic import View
from ProductService.forms import LoginForm, RegisterForm, ListingSearchForm
from ProductService.models import Listing

# Create your views here.
class HomePageView(View):
    template_name = 'product_service/app/home.html'

    def get(self, request):
        return render(request, self.template_name)


class LoginView(View):
    template_name = 'product_service/account/login.html'

    def get(self, request):
        form = LoginForm(request.GET or None)
        context = {
            'form': form,
        }
        return render(request, self.template_name, context)

    def post(self, request):
        form = LoginForm(request.POST)

        if form.is_valid():
            username = form.cleaned_data.get('username')
            password = form.cleaned_data.get('password')
            user = authenticate(request, username=username, password=password)
            if user is not None:
                login(request, user)
                return redirect('home')
            else:
                form.add_error(None, 'Wrong username or password!')

        context = {
            'form': form,
        }
        return render(request, self.template_name, context)


class LogoutView(View):
    template_name = 'product_service/account/logout.html'

    def get(self, request):
        return render(request, self.template_name)

    def post(self, request):
        logout(request)
        return redirect('home')


class RegisterView(View):
    template_name = 'product_service/account/register.html'

    def get(self, request):
        form = RegisterForm(request.GET or None)
        context = {
            'form': form,
        }
        return render(request, self.template_name, context)

    def post(self, request):
        form = RegisterForm(request.POST)

        context = {
            'form': form,
        }

        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('home')

        return render(request, self.template_name, context)


class ListingSearchView(View):
    template_name = 'product_service\\app\\listing_search.html'

    def get(self, req):
            form = ListingSearchForm(req.GET or None)
            listings = Listing.objects.all()

            if form.is_valid():
                form_data = form.cleaned_data
                name = form_data.get('name')
                max_price = form_data.get('max_price')
                categories = form_data.get('category')

                if name:
                    listings = listings.filter(product_name__icontains=name)
                if max_price:
                    listings = listings.filter(cost__lte=max_price)
                if categories:
                    listings = listings.filter(category__in=categories)

            paginator = Paginator(listings, 10)
            page_number = req.GET.get('page', 1)
            page_obj = paginator.get_page(page_number)

            render(req, self.template_name, context={'form': form, 'listings': listings, 'page_obj': page_obj})